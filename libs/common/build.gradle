plugins {
    id "io.micronaut.minimal.library"
}

ext {
    configFiles = "classpath:kafka.yml"
}

version = "${version}"
group = "io.seak"

repositories {
    mavenCentral()
    maven { url confluentUrl }
}

dependencies {
    implementation project(":libs:log")
    implementation project(":libs:avro")

    // Micronaut
    runtimeOnly libs.snakeyaml
    implementation libs.micronaut.kafka
    implementation libs.micronaut.http.client.jdk
    implementation libs.micronaut.serde.jackson

    // Avro
    implementation libs.avro
    implementation libs.kafka.avro.serializer

    // Log4J
    runtimeOnly libs.log4j.api
    runtimeOnly libs.log4j.slf4j2.impl

    // Test dependencies
    testImplementation libs.awaitility
    testImplementation libs.assertj.core
    testImplementation libs.testcontainers.junit.jupiter
    implementation libs.testcontainers.kafka
    implementation libs.testcontainers.testcontainers
    implementation libs.testcontainers.junit.jupiter
}

sourceSets {
    test {
        resources {
            srcDirs = [
                "src/test/resources",
                project(":").file("config/common").path
            ]
        }
    }
}

java {
    sourceCompatibility = JavaVersion.toVersion("${javaVersion}")
    targetCompatibility = JavaVersion.toVersion("${javaVersion}")
}

micronaut {
  testRuntime("junit5")
  processing {
    incremental(true)
    annotations("io.seak.common.*")
  }
}

test {
    testLogging.showStandardStreams = true
    testLogging.exceptionFormat = 'full'
    systemProperty 'micronaut.config.files', configFiles
}
