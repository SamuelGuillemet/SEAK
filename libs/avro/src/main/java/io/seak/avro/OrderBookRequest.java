/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.seak.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class OrderBookRequest extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2132250650636073198L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"OrderBookRequest\",\"namespace\":\"io.seak.avro\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"OrderBookRequestType\",\"symbols\":[\"NEW\",\"REPLACE\",\"CANCEL\"]}},{\"name\":\"order\",\"type\":{\"type\":\"record\",\"name\":\"Order\",\"fields\":[{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"},{\"name\":\"quantity\",\"type\":\"int\"},{\"name\":\"side\",\"type\":{\"type\":\"enum\",\"name\":\"Side\",\"symbols\":[\"BUY\",\"SELL\"]}},{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"Type\",\"symbols\":[\"MARKET\",\"LIMIT\"]},\"default\":\"MARKET\"},{\"name\":\"price\",\"type\":[\"null\",\"double\"],\"doc\":\"Only used for LIMIT orders\",\"default\":null},{\"name\":\"clOrderID\",\"type\":\"string\",\"default\":\"\"}]}},{\"name\":\"origClOrderID\",\"type\":[\"null\",\"string\"],\"doc\":\"Only used for REPLACE and CANCEL orders\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<OrderBookRequest> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<OrderBookRequest> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<OrderBookRequest> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<OrderBookRequest> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<OrderBookRequest> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this OrderBookRequest to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a OrderBookRequest from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a OrderBookRequest instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static OrderBookRequest fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private io.seak.avro.OrderBookRequestType type;
  private io.seak.avro.Order order;
  /** Only used for REPLACE and CANCEL orders */
  private java.lang.CharSequence origClOrderID;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public OrderBookRequest() {}

  /**
   * All-args constructor.
   * @param type The new value for type
   * @param order The new value for order
   * @param origClOrderID Only used for REPLACE and CANCEL orders
   */
  public OrderBookRequest(io.seak.avro.OrderBookRequestType type, io.seak.avro.Order order, java.lang.CharSequence origClOrderID) {
    this.type = type;
    this.order = order;
    this.origClOrderID = origClOrderID;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return type;
    case 1: return order;
    case 2: return origClOrderID;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: type = (io.seak.avro.OrderBookRequestType)value$; break;
    case 1: order = (io.seak.avro.Order)value$; break;
    case 2: origClOrderID = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public io.seak.avro.OrderBookRequestType getType() {
    return type;
  }


  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(io.seak.avro.OrderBookRequestType value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'order' field.
   * @return The value of the 'order' field.
   */
  public io.seak.avro.Order getOrder() {
    return order;
  }


  /**
   * Sets the value of the 'order' field.
   * @param value the value to set.
   */
  public void setOrder(io.seak.avro.Order value) {
    this.order = value;
  }

  /**
   * Gets the value of the 'origClOrderID' field.
   * @return Only used for REPLACE and CANCEL orders
   */
  public java.lang.CharSequence getOrigClOrderID() {
    return origClOrderID;
  }


  /**
   * Sets the value of the 'origClOrderID' field.
   * Only used for REPLACE and CANCEL orders
   * @param value the value to set.
   */
  public void setOrigClOrderID(java.lang.CharSequence value) {
    this.origClOrderID = value;
  }

  /**
   * Creates a new OrderBookRequest RecordBuilder.
   * @return A new OrderBookRequest RecordBuilder
   */
  public static io.seak.avro.OrderBookRequest.Builder newBuilder() {
    return new io.seak.avro.OrderBookRequest.Builder();
  }

  /**
   * Creates a new OrderBookRequest RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new OrderBookRequest RecordBuilder
   */
  public static io.seak.avro.OrderBookRequest.Builder newBuilder(io.seak.avro.OrderBookRequest.Builder other) {
    if (other == null) {
      return new io.seak.avro.OrderBookRequest.Builder();
    } else {
      return new io.seak.avro.OrderBookRequest.Builder(other);
    }
  }

  /**
   * Creates a new OrderBookRequest RecordBuilder by copying an existing OrderBookRequest instance.
   * @param other The existing instance to copy.
   * @return A new OrderBookRequest RecordBuilder
   */
  public static io.seak.avro.OrderBookRequest.Builder newBuilder(io.seak.avro.OrderBookRequest other) {
    if (other == null) {
      return new io.seak.avro.OrderBookRequest.Builder();
    } else {
      return new io.seak.avro.OrderBookRequest.Builder(other);
    }
  }

  /**
   * RecordBuilder for OrderBookRequest instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<OrderBookRequest>
    implements org.apache.avro.data.RecordBuilder<OrderBookRequest> {

    private io.seak.avro.OrderBookRequestType type;
    private io.seak.avro.Order order;
    private io.seak.avro.Order.Builder orderBuilder;
    /** Only used for REPLACE and CANCEL orders */
    private java.lang.CharSequence origClOrderID;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.seak.avro.OrderBookRequest.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.order)) {
        this.order = data().deepCopy(fields()[1].schema(), other.order);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasOrderBuilder()) {
        this.orderBuilder = io.seak.avro.Order.newBuilder(other.getOrderBuilder());
      }
      if (isValidValue(fields()[2], other.origClOrderID)) {
        this.origClOrderID = data().deepCopy(fields()[2].schema(), other.origClOrderID);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
    }

    /**
     * Creates a Builder by copying an existing OrderBookRequest instance
     * @param other The existing instance to copy.
     */
    private Builder(io.seak.avro.OrderBookRequest other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.order)) {
        this.order = data().deepCopy(fields()[1].schema(), other.order);
        fieldSetFlags()[1] = true;
      }
      this.orderBuilder = null;
      if (isValidValue(fields()[2], other.origClOrderID)) {
        this.origClOrderID = data().deepCopy(fields()[2].schema(), other.origClOrderID);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public io.seak.avro.OrderBookRequestType getType() {
      return type;
    }


    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public io.seak.avro.OrderBookRequest.Builder setType(io.seak.avro.OrderBookRequestType value) {
      validate(fields()[0], value);
      this.type = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public io.seak.avro.OrderBookRequest.Builder clearType() {
      type = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'order' field.
      * @return The value.
      */
    public io.seak.avro.Order getOrder() {
      return order;
    }


    /**
      * Sets the value of the 'order' field.
      * @param value The value of 'order'.
      * @return This builder.
      */
    public io.seak.avro.OrderBookRequest.Builder setOrder(io.seak.avro.Order value) {
      validate(fields()[1], value);
      this.orderBuilder = null;
      this.order = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'order' field has been set.
      * @return True if the 'order' field has been set, false otherwise.
      */
    public boolean hasOrder() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'order' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.seak.avro.Order.Builder getOrderBuilder() {
      if (orderBuilder == null) {
        if (hasOrder()) {
          setOrderBuilder(io.seak.avro.Order.newBuilder(order));
        } else {
          setOrderBuilder(io.seak.avro.Order.newBuilder());
        }
      }
      return orderBuilder;
    }

    /**
     * Sets the Builder instance for the 'order' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public io.seak.avro.OrderBookRequest.Builder setOrderBuilder(io.seak.avro.Order.Builder value) {
      clearOrder();
      orderBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'order' field has an active Builder instance
     * @return True if the 'order' field has an active Builder instance
     */
    public boolean hasOrderBuilder() {
      return orderBuilder != null;
    }

    /**
      * Clears the value of the 'order' field.
      * @return This builder.
      */
    public io.seak.avro.OrderBookRequest.Builder clearOrder() {
      order = null;
      orderBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'origClOrderID' field.
      * Only used for REPLACE and CANCEL orders
      * @return The value.
      */
    public java.lang.CharSequence getOrigClOrderID() {
      return origClOrderID;
    }


    /**
      * Sets the value of the 'origClOrderID' field.
      * Only used for REPLACE and CANCEL orders
      * @param value The value of 'origClOrderID'.
      * @return This builder.
      */
    public io.seak.avro.OrderBookRequest.Builder setOrigClOrderID(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.origClOrderID = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'origClOrderID' field has been set.
      * Only used for REPLACE and CANCEL orders
      * @return True if the 'origClOrderID' field has been set, false otherwise.
      */
    public boolean hasOrigClOrderID() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'origClOrderID' field.
      * Only used for REPLACE and CANCEL orders
      * @return This builder.
      */
    public io.seak.avro.OrderBookRequest.Builder clearOrigClOrderID() {
      origClOrderID = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public OrderBookRequest build() {
      try {
        OrderBookRequest record = new OrderBookRequest();
        record.type = fieldSetFlags()[0] ? this.type : (io.seak.avro.OrderBookRequestType) defaultValue(fields()[0]);
        if (orderBuilder != null) {
          try {
            record.order = this.orderBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("order"));
            throw e;
          }
        } else {
          record.order = fieldSetFlags()[1] ? this.order : (io.seak.avro.Order) defaultValue(fields()[1]);
        }
        record.origClOrderID = fieldSetFlags()[2] ? this.origClOrderID : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<OrderBookRequest>
    WRITER$ = (org.apache.avro.io.DatumWriter<OrderBookRequest>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<OrderBookRequest>
    READER$ = (org.apache.avro.io.DatumReader<OrderBookRequest>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeEnum(this.type.ordinal());

    this.order.customEncode(out);

    if (this.origClOrderID == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.origClOrderID);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.type = io.seak.avro.OrderBookRequestType.values()[in.readEnum()];

      if (this.order == null) {
        this.order = new io.seak.avro.Order();
      }
      this.order.customDecode(in);

      if (in.readIndex() != 1) {
        in.readNull();
        this.origClOrderID = null;
      } else {
        this.origClOrderID = in.readString(this.origClOrderID instanceof Utf8 ? (Utf8)this.origClOrderID : null);
      }

    } else {
      for (int i = 0; i < 3; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.type = io.seak.avro.OrderBookRequestType.values()[in.readEnum()];
          break;

        case 1:
          if (this.order == null) {
            this.order = new io.seak.avro.Order();
          }
          this.order.customDecode(in);
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.origClOrderID = null;
          } else {
            this.origClOrderID = in.readString(this.origClOrderID instanceof Utf8 ? (Utf8)this.origClOrderID : null);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










