plugins {
    id "com.github.johnrengelman.shadow"
    id "io.micronaut.application"
}

version = "${version}"
group = "pfe_broker"

repositories {
    mavenCentral()
    maven { url confluentUrl }
}

dependencies {
    implementation project(":libs:log")
    implementation project(":libs:avro")
    implementation project(":libs:models")
    implementation project(":libs:common")

    runtimeOnly group: 'org.yaml', name: 'snakeyaml', version: '2.2'
    implementation group: 'io.micronaut.kafka', name: 'micronaut-kafka', version: '5.2.0'

    // Database
    implementation group: 'io.micronaut.data', name: 'micronaut-data-hibernate-jpa', version: '4.4.1'

    // Log4J
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.22.1'
    runtimeOnly group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.22.1'
    runtimeOnly group: 'org.apache.logging.log4j', name: 'log4j-slf4j2-impl', version: '2.22.1'

    // Avro
    implementation group: 'io.confluent', name: 'kafka-avro-serializer', version: '7.5.1'

    // QuickFixJ
    implementation group: 'org.quickfixj', name: 'quickfixj-core', version: '2.3.1'
    implementation group: 'org.quickfixj', name: 'quickfixj-messages-all', version: '2.3.1'

    // Test implementation
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.25.1'
    testImplementation group: 'org.testcontainers', name: 'postgresql', version: '1.19.3'
    testImplementation group: 'org.testcontainers', name: 'junit-jupiter', version: '1.19.3'
    testImplementation group: 'org.awaitility', name: 'awaitility', version: '4.2.0'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '5.8.0'
}

application {
    mainClass.set("pfe_broker.quickfix_server.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("${javaVersion}")
    targetCompatibility = JavaVersion.toVersion("${javaVersion}")
}

sourceSets {
    main {
        resources {
            srcDirs = [
                "src/main/resources",
                project(":").file("config/common").path,
                project(":").file("config/quickfix").path
            ]
        }
    }
    test {
        resources {
            srcDirs = [
                "src/test/resources",
                project(":").file("config/common").path,
                project(":").file("config/quickfix").path
            ]
        }
    }
}


graalvmNative.toolchainDetection = false

micronaut {
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("pfe_broker.quickfix_server.*")
    }
}

test {
    testLogging.showStandardStreams = true
    testLogging.exceptionFormat = 'full'
}
