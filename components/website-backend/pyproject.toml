[tool.poetry]
name = "website-backend"
version = "0.3.0"
description = "Fast API app for pfe-asr-broker backend"
authors = ["Samuel Guillemet <samuel.guillemet@telecom-sudparis.eu>"]
readme = "README.md"
packages = [{ include = "app" }]


[tool.poetry.dependencies]
python = "^3.10"
fastapi = { extras = ["all"], version = "^0.109.0" }
pydantic-settings = "^2.0.2"
zxcvbn = "^4.4.28"
sqlalchemy = "^2.0.25"
pyhumps = "^3.8.0"
python-jose = "^3.3.0"
passlib = { extras = ["bcrypt"], version = "^1.7.4" }
requests = "^2.31.0"
types-requests = "^2.31.0.20240106"
asyncpg = "^0.29.0"
tenacity = "^8.2.2"
aiosqlite = "^0.19.0"
redis = {extras = ["hiredis"], version = "^5.0.1"}
hiredis = "^2.3.2"


[tool.poetry.group.dev.dependencies]
black = "^23.12.1"
flake8 = "^7.0.0"
isort = "^5.13.2"
pre-commit = "^3.6.0"
mypy = "^1.8.0"
mypy-extensions = "^1.0.0"
pylint = "^2.17.4"
pytest = "^7.4.4"
pytest-cov = "^4.1.0"
pylint-pydantic = "^0.3.2"
pytest-env = "^1.1.3"
pytest-asyncio = "^0.23.3"
httpx = "^0.26.0"
pytest-xdist = "^3.5.0"
flake8-pyproject = "^1.2.3"


[tool.poetry.scripts]
init-db = "app.commands.init_db:init_db"
migrate-db = "app.commands.migrate_db:migrate_db"
reset-db = "app.commands.reset_db:reset_db"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.isort]
profile = "black"


[tool.mypy]
no_strict_optional = true
ignore_missing_imports = true


[tool.flake8]
max-line-length = 120
extend-exclude = [
  ".venv",
  ".git",
  "__pycache__",
  "__init__.py",
  ".mypy_cache",
  ".pytest_cache",
]


[tool.pylint.main]
load-plugins = ["pylint_pydantic"]
ignore = ["tests/*", "app/db/base.py"]
disable = [
  "missing-module-docstring",
  "missing-function-docstring",
  "missing-class-docstring",
  "too-few-public-methods",
  "too-many-arguments",
  "too-many-instance-attributes",
  "too-many-locals",
  "logging-fstring-interpolation",
  "redefined-builtin",
]


[tool.pylint.basic]
good-names = [
  "i",
  "j",
  "k",
  "ex",
  "Run",
  "_",
  "pk",
  "x",
  "y",
  "e",
  "f",
  "v",
  "db",
  "id",
]


[tool.pylint.format]
max-line-length = 120


[tool.pylint.typecheck]
ignored-classes = ["FieldInfo"]


[tool.pytest.ini_options]
norecursedirs = [
  ".venv",
  ".git",
  "__pycache__",
  "__init__.py",
  ".mypy_cache",
  ".pytest_cache",
]
addopts = ["--cov=app", "--cov-report=term-missing", "--cov-report=xml"]
env = ["ENVIRONMENT=test"]
log_cli = false
log_cli_level = "INFO"
filterwarnings = "ignore::DeprecationWarning"


[tool.coverage.run]
omit = ["app/db/base_class.py", "app/commands/*", "app/db/base.py"]
concurrency = ["greenlet", "thread"]
